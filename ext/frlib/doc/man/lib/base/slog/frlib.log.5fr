.\" Copyright 2003-2009 Frank Reker <frank@reker.net>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.TH "frlog.log" 5fr "26 sep 2009" "Frank Reker" "frlib"
.SH NAME
<myprog>.log \- the log file

.SH THIS DOCUMENT
This document explains the format of the log file written by programmes
using the frlib.

.SH The Log-File Format
Every line is composed by the time the message was written (in the form
day/month/year hour:minute:second.milliseconds) followed by the 
programme name and its
process id in paranthesis and the module name. The module name might miss
if none was specified.
This is followed by the level in angle paranthesis (p.es. <debug>), a
colon and the log message. The latter one normally begins with the
function name that produced the log message.
An example:
.nf
23/06/2009 17:44:55.012 mmsemu(1234):main<debug>:threads_destroy(): sending all threads a cancellation request...
.fi
This message was created 
the 23 june 2009 at 17:44 and 12 miliseconds
by the programme mmsemu (with the process id 1234) in module main.
The message was a debug message generated by the function threads_destroy().

.SH Levels for Log Messages
The levels are the same as for syslog(3), with the addition of verbose and 
vverbose.
.TP
.B 9 (vverb - very verbose)
debug message - for very verbose output.
.TP
.B 8 (verbose)
debug message - for verbose output.
.TP
.B 7 (debug)
normal debug messages.
.TP
.B 6 (info)
informational message. Here should appear messages, that are interesting 
in normal operation, not only in debug. (e.g. if a programme makes connection
to the outside world).
.TP
.B 5 (notice)
warning message for normal conditions.
This is for messages, that are significant to note, but the programme
is still in normal operation.
.TP
.B 4 (warning)
warning messages for abnormal conditions. The programme can continue, but
might cause an error condition later on.
.TP
.B 3 (error)
error message - for normal errors.
.TP
.B 2 (critical)
error message - in critical conditions (e.g. other programmes might be
affected as well).
.TP
.B 1 (alert)
a manual intervention is neccessary immediately. Generally a reboot can
resolve this problem.
.TP
.B 0 (emerg)
The system is unusable. - Even after a reboot.


.SH "SEE ALSO"
.BR slog "(3fr), " errors "(5fr), " syslog "(3)."





